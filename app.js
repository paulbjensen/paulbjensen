// Generated by CoffeeScript 1.3.1
(function() {
  var achievements, app, assets, empDesc, employers, express, fs, md, setCurrentPostAndPosts, watch;

  express = require('express');

  assets = require('connect-assets');

  md = require('node-markdown').Markdown;

  fs = require('fs');

  watch = require('watch');

  app = express.createServer();

  app.use(express.logger());

  app.use(express.staticCache());

  app.use(express["static"]("" + __dirname + "/public", {
    maxAge: 31557600000
  }));

  app.set('view engine', 'jade');

  process.on('uncaughtException', function(err) {
    return console.error('Exception caught: ', err);
  });

  empDesc = function(name) {
    return md(fs.readFileSync('./employerDescriptions/' + name + '.md', 'utf8', function(err, data) {
      return data;
    }));
  };

  employers = [
    {
      'timeline': 'August 2012 - ',
      'company': 'Axisto Media',
      'url': 'http://axisto.com',
      'role': 'Developer',
      'description': empDesc('axisto')
    }, {
      'timeline': 'July 2012 - ',
      'company': 'Anephenix',
      'url': 'http://anephenix.com',
      'role': 'Founder',
      'description': empDesc('anephenix')
    }, {
      'timeline': 'February 2012 - April 2012',
      'company': 'Uberlife',
      'url': 'http://uberlife.com',
      'role': 'Developer',
      'description': empDesc('uberlife')
    }, {
      'timeline': 'July 2010 - February 2012',
      'company': 'AOL',
      'url': 'http://corp.aol.com',
      'role': 'Software Engineer',
      'description': empDesc('aol')
    }, {
      'timeline': 'May 2008 - July 2010',
      'company': 'New Bamboo',
      'url': 'http://new-bamboo.co.uk',
      'role': 'Developer',
      'description': empDesc('new-bamboo')
    }, {
      'timeline': 'February 2008 - May 2008',
      'company': 'Naked',
      'url': 'http://getnaked.com',
      'role': 'Developer',
      'description': empDesc('naked')
    }, {
      'timeline': 'June 2007 - December 2007',
      'company': 'Tickex',
      'url': 'http://tickex.com',
      'role': 'Developer',
      'description': empDesc('tickex')
    }, {
      'timeline': 'October 2006 - December 2006',
      'company': 'TopDrawMedia',
      'url': 'http://topdrawmedia.com',
      'role': 'Web Developer',
      'description': empDesc('topdrawmedia')
    }, {
      'timeline': 'June - August 2004',
      'company': 'AmTrac Ltd',
      'url': '#',
      'role': 'Cladding Labourer',
      'description': empDesc('amtrac')
    }
  ];

  achievements = [
    {
      'year': 2002,
      'achievement': 'Awarded certificate for outstanding achievement in Business Education'
    }, {
      'year': 2002,
      'achievement': 'Awarded credit for Young Enterprise Examination'
    }, {
      'year': 2003,
      'achievement': 'Awarded certificate for outstanding achievement in Academic Excellence'
    }, {
      'year': 2003,
      'achievement': 'Awarded curriculum award for Information Technology'
    }, {
      'year': 2004,
      'achievement': 'Awarded curriculum award for Communication Studies (100% score in both A2 exams)'
    }, {
      'year': 2004,
      'achievement': 'Awarded certificate for outstanding achievement in 6th form community involvement'
    }, {
      'year': 2005,
      'achievement': 'Competed in the final of the IBM University business challenge 2004/2005, came 4th place out of 136 teams who competed.'
    }
  ];

  setCurrentPostAndPosts = function(cb) {
    return fs.readdir("" + __dirname + "/posts", function(err, posts) {
      global.posts = posts.reverse();
      return fs.readFile("" + __dirname + "/posts/" + posts[0], 'utf8', function(err, post) {
        global.currentPost = md(post);
        if (cb != null) {
          return cb();
        }
      });
    });
  };

  watch.createMonitor("" + __dirname + "/posts", function(monitor) {
    monitor.on("created", function(f, stat) {
      return setCurrentPostAndPosts();
    });
    monitor.on("changed", function(f, curr, prev) {
      return setCurrentPostAndPosts();
    });
    return monitor.on("removed", function(f, stat) {
      return setCurrentPostAndPosts();
    });
  });

  setCurrentPostAndPosts(function() {
    var port;
    app.get('/', function(req, res) {
      return res.render('index', {
        layout: false,
        locals: {
          posts: posts,
          post: currentPost
        }
      });
    });
    app.get('/posts/:year/:month/:day/:name', function(req, res) {
      return fs.exists("" + __dirname + "/posts/" + req.params.year + "_" + req.params.month + "_" + req.params.day + "_" + req.params.name + ".md", function(exists) {
        if (exists) {
          return fs.readFile("" + __dirname + "/posts/" + req.params.year + "_" + req.params.month + "_" + req.params.day + "_" + req.params.name + ".md", 'utf8', function(err, post) {
            post = md(post);
            return res.render('index', {
              layout: false,
              locals: {
                posts: posts,
                post: post
              }
            });
          });
        } else {
          return res.redirect('/404');
        }
      });
    });
    app.get('/cv', function(req, res) {
      return res.render('cv', {
        layout: false,
        locals: {
          employers: employers,
          achievements: achievements
        }
      });
    });
    app.get('/404', function(req, res) {
      return res.render('404', {
        layout: false
      });
    });
    app.get('/reload', function(req, res) {
      return setCurrentPostAndPosts(function() {
        return res.send("OK");
      });
    });
    app.get('*', function(req, res) {
      return res.redirect('/404');
    });
    port = process.env.PORT || 3000;
    return app.listen(port);
  });

}).call(this);
